/**
 * Página de Produtos - JavaScript
 * Gerencia as funcionalidades de filtros, busca e interações da página de produtos
 */

class ProdutosController {
    constructor() {
        this.init();
    }

    init() {
        this.bindEvents();
        this.setupSearchTimeout();
    }

    bindEvents() {
        // Event listeners para filtros
        document.getElementById('category-filter').addEventListener('change', () => this.aplicarFiltros());
        document.getElementById('sort-filter').addEventListener('change', () => this.aplicarFiltros());
        document.getElementById('price-filter').addEventListener('change', () => this.aplicarFiltros());
        
        // Busca ao pressionar Enter
        document.getElementById('search-input').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                this.aplicarFiltros();
            }
        });
        
        // Buscar ao clicar no botão
        document.querySelector('.search-btn').addEventListener('click', () => this.aplicarFiltros());
        
        // Remover filtros individuais
        document.querySelectorAll('.remove-filter').forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.target.parentElement.remove();
                this.aplicarFiltros();
            });
        });
        
        // Limpar todos os filtros
        document.querySelector('.clear-filters').addEventListener('click', () => this.limparFiltros());
        
        // Alternar visualização
        document.querySelectorAll('.view-btn').forEach(btn => {
            btn.addEventListener('click', (e) => this.alternarVisualizacao(e));
        });
    }

    setupSearchTimeout() {
        // Busca em tempo real
        let searchTimeout;
        document.getElementById('search-input').addEventListener('input', () => {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                this.aplicarFiltros();
            }, 500);
        });
    }

    /**
     * Aplica os filtros selecionados
     */
    aplicarFiltros() {
        const categoria = document.getElementById('category-filter').value;
        const ordenacao = document.getElementById('sort-filter').value;
        const preco = document.getElementById('price-filter').value;
        const busca = document.getElementById('search-input').value;
        
        // Construir URL com filtros
        const params = new URLSearchParams();
        if (categoria) params.append('categoria', categoria);
        if (ordenacao) params.append('ordenacao', ordenacao);
        if (preco) params.append('preco', preco);
        if (busca) params.append('busca', busca);
        
        // Redirecionar com filtros
        window.location.href = '/produtos?' + params.toString();
    }

    /**
     * Limpa todos os filtros
     */
    limparFiltros() {
        document.getElementById('category-filter').value = '';
        document.getElementById('sort-filter').value = 'recent';
        document.getElementById('price-filter').value = '';
        document.getElementById('search-input').value = '';
        
        window.location.href = '/produtos';
    }

    /**
     * Alterna entre visualizações (grade/lista)
     */
    alternarVisualizacao(event) {
        document.querySelectorAll('.view-btn').forEach(btn => btn.classList.remove('active'));
        event.target.classList.add('active');
        
        const view = event.target.dataset.view;
        const container = document.getElementById('products-container');
        
        if (view === 'list') {
            container.style.gridTemplateColumns = '1fr';
        } else {
            container.style.gridTemplateColumns = 'repeat(auto-fill, minmax(280px, 1fr))';
        }
    }
}

// Funções globais para compatibilidade com onclick

/**
 * Adiciona um produto ao carrinho
 */
function adicionarAoCarrinho(produtoId) {
    const button = event.target;
    const originalText = button.innerHTML;
    
    button.classList.add('loading');
    button.innerHTML = '⏳';
    
    fetch('/carrinho/adicionar', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || ''
        },
        body: JSON.stringify({
            produto_id: produtoId,
            quantidade: 1
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            button.innerHTML = '✅ Adicionado';
            setTimeout(() => {
                button.classList.remove('loading');
                button.innerHTML = originalText;
            }, 1000);
            
            mostrarNotificacao('Produto adicionado ao carrinho!', 'success');
        } else {
            throw new Error(data.message);
        }
    })
    .catch(error => {
        console.error('Erro:', error);
        button.classList.remove('loading');
        button.innerHTML = originalText;
        mostrarNotificacao('Erro ao adicionar produto: ' + error.message, 'error');
    });
}

/**
 * Adiciona um produto aos favoritos
 */
function adicionarAosFavoritos(produtoId) {
    const button = event.target;
    const originalText = button.innerHTML;
    
    button.classList.add('loading');
    button.innerHTML = '⏳';
    
    // Simular adição aos favoritos
    setTimeout(() => {
        button.classList.remove('loading');
        button.innerHTML = '❤️';
        mostrarNotificacao('Produto adicionado aos favoritos!', 'success');
    }, 500);
}

/**
 * Navega para a página de detalhes do produto
 */
function verProduto(produtoId) {
    window.location.href = '/produto/' + produtoId;
}

/**
 * Mostra uma notificação
 */
function mostrarNotificacao(mensagem, tipo) {
    const notificacao = document.createElement('div');
    notificacao.className = `alert alert-${tipo}`;
    notificacao.setAttribute('role', 'alert');
    notificacao.setAttribute('aria-live', 'polite');
    notificacao.textContent = mensagem;
    
    const container = document.querySelector('.container') || document.body;
    container.insertBefore(notificacao, container.firstChild);
    
    // Scroll para a notificação
    notificacao.scrollIntoView({ behavior: 'smooth', block: 'center' });
    
    // Remove a notificação após 3 segundos
    setTimeout(() => {
        notificacao.remove();
    }, 3000);
}

// Inicializa o controlador quando o DOM estiver pronto
document.addEventListener('DOMContentLoaded', () => {
    window.produtosController = new ProdutosController();
});
